[2025-02-13T07:59:42.692+0000] {local_task_job_runner.py:123} INFO - ::group::Pre task execution logs
[2025-02-13T07:59:43.352+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Covid19_ETL.create_tables manual__2025-02-13T07:59:06.648644+00:00 [queued]>
[2025-02-13T07:59:43.429+0000] {taskinstance.py:2613} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Covid19_ETL.create_tables manual__2025-02-13T07:59:06.648644+00:00 [queued]>
[2025-02-13T07:59:43.435+0000] {taskinstance.py:2866} INFO - Starting attempt 1 of 1
[2025-02-13T07:59:43.820+0000] {taskinstance.py:2889} INFO - Executing <Task(PostgresOperator): create_tables> on 2025-02-13 07:59:06.648644+00:00
[2025-02-13T07:59:45.175+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:70: DeprecationWarning: This process (pid=487) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2025-02-13T07:59:45.513+0000] {standard_task_runner.py:72} INFO - Started process 489 to run task
[2025-02-13T07:59:45.481+0000] {standard_task_runner.py:104} INFO - Running: ['***', 'tasks', 'run', 'Covid19_ETL', 'create_tables', 'manual__2025-02-13T07:59:06.648644+00:00', '--job-id', '13', '--raw', '--subdir', 'DAGS_FOLDER/covid_19.py', '--cfg-path', '/tmp/tmpt3w84zh8']
[2025-02-13T07:59:45.589+0000] {standard_task_runner.py:105} INFO - Job 13: Subtask create_tables
[2025-02-13T07:59:46.200+0000] {task_command.py:467} INFO - Running <TaskInstance: Covid19_ETL.create_tables manual__2025-02-13T07:59:06.648644+00:00 [running]> on host 3b43358e3e84
[2025-02-13T07:59:51.069+0000] {job.py:229} INFO - Heartbeat recovered after 11.00 seconds
[2025-02-13T08:00:05.172+0000] {taskinstance.py:3132} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='Covid19_ETL' AIRFLOW_CTX_TASK_ID='create_tables' AIRFLOW_CTX_EXECUTION_DATE='2025-02-13T07:59:06.648644+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-02-13T07:59:06.648644+00:00'
[2025-02-13T08:00:05.186+0000] {taskinstance.py:731} INFO - ::endgroup::
[2025-02-13T08:00:05.326+0000] {sql.py:278} INFO - Executing: 
        CREATE TABLE IF NOT EXISTS dim_date_details (
            date_id SERIAL PRIMARY KEY,
            date DATE UNIQUE NOT NULL,
            year INTEGER,
            month INTEGER,
            day INTEGER,
            weekday VARCHAR(9),
            is_weekend BOOLEAN
        );

        CREATE TABLE IF NOT EXISTS dim_location_details (
            location_id SERIAL PRIMARY KEY,
            fips VARCHAR(10),
            admin2 VARCHAR(255),
            province_state VARCHAR(255),
            country_region VARCHAR(255),
            lat FLOAT,
            long_ FLOAT,
            combined_key VARCHAR(500) UNIQUE
        );

        CREATE TABLE IF NOT EXISTS fact_cases (
            case_id SERIAL PRIMARY KEY,
            date_id INTEGER REFERENCES dim_date_details(date_id),
            location_id INTEGER REFERENCES dim_location_details(location_id),
            confirmed INTEGER,
            deaths INTEGER,
            recovered INTEGER,
            active INTEGER,
            incident_rate FLOAT,
            case_fatality_ratio FLOAT
        );
        
[2025-02-13T08:00:05.359+0000] {base.py:84} INFO - Retrieving connection 'postgres_conn'
[2025-02-13T08:00:05.388+0000] {base.py:84} INFO - Retrieving connection 'postgres_conn'
[2025-02-13T08:00:05.404+0000] {sql.py:553} INFO - Running statement: 
        CREATE TABLE IF NOT EXISTS dim_date_details (
            date_id SERIAL PRIMARY KEY,
            date DATE UNIQUE NOT NULL,
            year INTEGER,
            month INTEGER,
            day INTEGER,
            weekday VARCHAR(9),
            is_weekend BOOLEAN
        );

        CREATE TABLE IF NOT EXISTS dim_location_details (
            location_id SERIAL PRIMARY KEY,
            fips VARCHAR(10),
            admin2 VARCHAR(255),
            province_state VARCHAR(255),
            country_region VARCHAR(255),
            lat FLOAT,
            long_ FLOAT,
            combined_key VARCHAR(500) UNIQUE
        );

        CREATE TABLE IF NOT EXISTS fact_cases (
            case_id SERIAL PRIMARY KEY,
            date_id INTEGER REFERENCES dim_date_details(date_id),
            location_id INTEGER REFERENCES dim_location_details(location_id),
            confirmed INTEGER,
            deaths INTEGER,
            recovered INTEGER,
            active INTEGER,
            incident_rate FLOAT,
            case_fatality_ratio FLOAT
        );
        , parameters: None
[2025-02-13T08:00:05.450+0000] {taskinstance.py:340} INFO - ::group::Post task execution logs
[2025-02-13T08:00:05.501+0000] {taskinstance.py:352} INFO - Marking task as SUCCESS. dag_id=Covid19_ETL, task_id=create_tables, run_id=manual__2025-02-13T07:59:06.648644+00:00, execution_date=20250213T075906, start_date=20250213T075943, end_date=20250213T080005
[2025-02-13T08:00:05.938+0000] {local_task_job_runner.py:266} INFO - Task exited with return code 0
[2025-02-13T08:00:06.267+0000] {taskinstance.py:3895} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2025-02-13T08:00:06.327+0000] {local_task_job_runner.py:245} INFO - ::endgroup::
